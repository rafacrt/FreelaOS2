
import mysql from 'mysql2/promise';
import 'dotenv/config';

const dbConfig = {
  host: process.env.DB_HOST || 'localhost',
  port: parseInt(process.env.DB_PORT || '3306', 10),
  user: process.env.DB_USER || 'root',
  password: process.env.DB_PASSWORD || 'password',
  database: process.env.DB_DATABASE || 'freelaos_db',
  waitForConnections: true,
  connectionLimit: parseInt(process.env.DB_CONNECTION_LIMIT || '10', 10),
  queueLimit: 0,
};

const pool = mysql.createPool(dbConfig);

export const testConnection = async () => {
  let connection;
  try {
    // Log the configuration being used, but be careful with passwords in real production logs.
    // For local dev, this is fine.
    console.log(`[DB Test] Tentando conectar com: host=${dbConfig.host}, port=${dbConfig.port}, user=${dbConfig.user}, database=${dbConfig.database}`);
    connection = await pool.getConnection();
    console.log('‚úÖ Conectado ao banco MySQL com sucesso usando o pool.');
    return true;
  } catch (error: any) { 
    console.error('‚ùå Erro ao conectar ao banco MySQL usando o pool.');
    console.error(`   Erro: ${error.message}`);
    if (error.code) {
        console.error(`   C√≥digo do Erro: ${error.code}`);
        if (error.code === 'ECONNREFUSED') {
            console.error(`   üëâ ECONNREFUSED: Verifique se o servidor MySQL est√° rodando e acess√≠vel em ${dbConfig.host}:${dbConfig.port}.`);
            console.error('      Confira tamb√©m as configura√ß√µes de firewall e se o MySQL est√° escutando no endere√ßo e porta corretos.');
        } else if (error.code === 'ER_ACCESS_DENIED_ERROR') {
            console.error(`   üëâ ER_ACCESS_DENIED_ERROR: Verifique as credenciais (usu√°rio '${dbConfig.user}') e as permiss√µes do usu√°rio MySQL para o host '${dbConfig.host}'.`);
        } else if (error.code === 'ER_BAD_DB_ERROR') {
            console.error(`   üëâ ER_BAD_DB_ERROR: O banco de dados "${dbConfig.database}" n√£o existe. Verifique o nome do banco.`);
        }
    }
    if (error.errno) console.error(`   N√∫mero do Erro: ${error.errno}`);
    if (error.sqlState) console.error(`   SQLState: ${error.sqlState}`);
    return false;
  } finally {
    if (connection) {
      connection.release();
      console.log('üîö Conex√£o com o banco liberada.');
    }
  }
};

export default pool;
